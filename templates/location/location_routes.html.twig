{% extends 'base.html.twig' %}

{% block title %}Rutas en {{ location.name }} - ClimbUp{% endblock %}

{% block body_class %}location-routes-page{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/pages/location/location_routes.css') }}">
{% endblock %}

{% block content %}
    <div class="location-header">
        <div class="location-header-content">
            <div class="location-header-back">
                <a href="{{ path('map') }}" class="btn-back">
                    <i class="fas fa-arrow-left"></i>
                    <span>Volver al mapa</span>
                </a>
            </div>
            <div class="location-header-info">
                <h1>{{ location.name }}</h1>
                <div class="location-meta">
                    <div class="location-meta-item">
                        <i class="fas fa-map-marker-alt"></i>
                        <span>{{ location.latitude }}, {{ location.longitude }}</span>
                    </div>
                    <div class="location-meta-item">
                        <i class="fas fa-mountain"></i>
                        <span>{{ routes|length }} rutas</span>
                    </div>
                    <a href="https://www.google.com/maps?q={{ location.latitude }},{{ location.longitude }}"
                       target="_blank"
                       class="btn-directions">
                        <i class="fas fa-directions"></i>
                        <span>Cómo llegar</span>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="routes-container">
        <div class="routes-toolbar">
            <div class="routes-search">
                <div class="input-wrapper">
                    <i class="fas fa-search input-icon"></i>
                    <input type="text" id="route-search" class="form-control" placeholder="Buscar rutas...">
                </div>
            </div>

            <div class="routes-filters">
                <div class="filter-group">
                    <label>Tipo:</label>
                    <div class="filter-buttons" id="type-filters">
                        <button class="filter-btn active" data-filter="all">Todas</button>
                        <button class="filter-btn" data-filter="Sport">Sport</button>
                        <button class="filter-btn" data-filter="Trad">Trad</button>
                        <button class="filter-btn" data-filter="Boulder">Boulder</button>
                    </div>
                </div>

                <div class="filter-group">
                    <label>Ordenar por:</label>
                    <select id="sort-routes" class="form-select">
                        <option value="name-asc">Nombre (A-Z)</option>
                        <option value="name-desc">Nombre (Z-A)</option>
                        <option value="difficulty-asc">Dificultad (Fácil-Difícil)</option>
                        <option value="difficulty-desc">Dificultad (Difícil-Fácil)</option>
                        <option value="length-asc">Longitud (Menor-Mayor)</option>
                        <option value="length-desc">Longitud (Mayor-Menor)</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="routes-view-toggle">
            <button class="view-btn active" data-view="grid">
                <i class="fas fa-th"></i>
            </button>
            <button class="view-btn" data-view="list">
                <i class="fas fa-list"></i>
            </button>
        </div>

        {% if routes %}
            <div id="routes-grid" class="routes-grid">
                {% for route in routes %}
                    <div class="route-card" data-type="{{ route.routeType.value }}" data-name="{{ route.name }}" data-difficulty="{{ route.difficulty }}" data-length="{{ route.length }}">
                        <div class="route-card-header route-type-{{ route.routeType.value|lower }}">
                            <div class="route-type-badge">{{ route.routeType.value }}</div>
                            <h2 class="route-name">{{ route.name }}</h2>
                            <div class="route-difficulty">{{ route.difficulty }}</div>
                        </div>

                        <div class="route-card-body">
                            <div class="route-stats">
                                <div class="route-stat">
                                    <i class="fas fa-ruler-vertical"></i>
                                    <span>{{ route.length }} m</span>
                                </div>
                                <div class="route-stat">
                                    <i class="fas fa-layer-group"></i>
                                    <span>{{ route.pitches }} {{ route.pitches > 1 ? 'tramos' : 'tramo' }}</span>
                                </div>
                            </div>

                            <div class="route-actions">
                                <button class="btn-save-route" data-route-id="{{ route.id }}" title="Guardar ruta">
                                    <i class="far fa-bookmark"></i>
                                </button>
                                <button class="btn-share-route" data-route-id="{{ route.id }}" title="Compartir ruta">
                                    <i class="fas fa-share-alt"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-route"></i>
                </div>
                <h3>No hay rutas disponibles</h3>
                <p>Aún no se han añadido rutas para esta ubicación.</p>
                <a href="{{ path('map') }}" class="btn-primary">
                    <i class="fas fa-map-marked-alt me-2"></i>
                    Explorar otras ubicaciones
                </a>
            </div>
        {% endif %}
    </div>

    <!-- Modal para compartir ruta -->
    <div class="share-modal" id="shareModal">
        <div class="share-modal-content">
            <div class="share-modal-header">
                <h3>Compartir ruta</h3>
                <button class="btn-close-modal">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="share-modal-body">
                <p>Comparte esta ruta con tus amigos:</p>
                <div class="share-url-container">
                    <input type="text" id="shareUrl" readonly>
                    <button id="copyShareUrl">
                        <i class="fas fa-copy"></i>
                    </button>
                </div>
                <div class="share-social">
                    <a href="#" class="share-social-btn" id="shareWhatsapp">
                        <i class="fab fa-whatsapp"></i>
                    </a>
                    <a href="#" class="share-social-btn" id="shareTelegram">
                        <i class="fab fa-telegram-plane"></i>
                    </a>
                    <a href="#" class="share-social-btn" id="shareTwitter">
                        <i class="fab fa-twitter"></i>
                    </a>
                    <a href="#" class="share-social-btn" id="shareFacebook">
                        <i class="fab fa-facebook-f"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Búsqueda de rutas
            const searchInput = document.getElementById('route-search');
            const routeCards = document.querySelectorAll('.route-card');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();

                routeCards.forEach(card => {
                    const routeName = card.getAttribute('data-name').toLowerCase();
                    if (routeName.includes(searchTerm)) {
                        card.style.display = 'flex';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });

            // Filtrado por tipo
            const typeFilters = document.querySelectorAll('#type-filters .filter-btn');

            typeFilters.forEach(filter => {
                filter.addEventListener('click', function() {
                    // Actualizar botones activos
                    typeFilters.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');

                    const filterValue = this.getAttribute('data-filter');

                    routeCards.forEach(card => {
                        if (filterValue === 'all' || card.getAttribute('data-type') === filterValue) {
                            card.style.display = 'flex';
                        } else {
                            card.style.display = 'none';
                        }
                    });
                });
            });

            // Ordenación de rutas
            const sortSelect = document.getElementById('sort-routes');
            const routesGrid = document.getElementById('routes-grid');

            sortSelect.addEventListener('change', function() {
                const sortValue = this.value;
                const routeCardsArray = Array.from(routeCards);

                routeCardsArray.sort((a, b) => {
                    switch(sortValue) {
                        case 'name-asc':
                            return a.getAttribute('data-name').localeCompare(b.getAttribute('data-name'));
                        case 'name-desc':
                            return b.getAttribute('data-name').localeCompare(a.getAttribute('data-name'));
                        case 'difficulty-asc':
                            return a.getAttribute('data-difficulty').localeCompare(b.getAttribute('data-difficulty'));
                        case 'difficulty-desc':
                            return b.getAttribute('data-difficulty').localeCompare(a.getAttribute('data-difficulty'));
                        case 'length-asc':
                            return parseInt(a.getAttribute('data-length')) - parseInt(b.getAttribute('data-length'));
                        case 'length-desc':
                            return parseInt(b.getAttribute('data-length')) - parseInt(a.getAttribute('data-length'));
                        default:
                            return 0;
                    }
                });

                // Reordenar en el DOM
                routeCardsArray.forEach(card => {
                    routesGrid.appendChild(card);
                });
            });

            // Cambio de vista (grid/list)
            const viewButtons = document.querySelectorAll('.view-btn');
            const routesContainer = document.querySelector('.routes-grid');

            viewButtons.forEach(button => {
                button.addEventListener('click', function() {
                    viewButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');

                    const viewType = this.getAttribute('data-view');
                    routesContainer.className = viewType === 'grid' ? 'routes-grid' : 'routes-list';
                });
            });

            // Guardar ruta (toggle bookmark)
            const saveButtons = document.querySelectorAll('.btn-save-route');

            saveButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const icon = this.querySelector('i');
                    if (icon.classList.contains('far')) {
                        icon.classList.remove('far');
                        icon.classList.add('fas');
                        this.classList.add('saved');
                    } else {
                        icon.classList.remove('fas');
                        icon.classList.add('far');
                        this.classList.remove('saved');
                    }

                    // Aquí iría la lógica para guardar/eliminar la ruta de favoritos
                    const routeId = this.getAttribute('data-route-id');
                    console.log('Toggle save route:', routeId);
                });
            });

            // Compartir ruta
            const shareButtons = document.querySelectorAll('.btn-share-route');
            const shareModal = document.getElementById('shareModal');
            const closeModalButton = document.querySelector('.btn-close-modal');
            const shareUrlInput = document.getElementById('shareUrl');
            const copyButton = document.getElementById('copyShareUrl');

            shareButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const routeId = this.getAttribute('data-route-id');
                    const shareUrl = `${window.location.origin}/route/${routeId}`;

                    shareUrlInput.value = shareUrl;
                    shareModal.classList.add('active');

                    // Configurar enlaces de redes sociales
                    const routeName = this.closest('.route-card').getAttribute('data-name');
                    const shareText = `Mira esta ruta de escalada: ${routeName}`;

                    document.getElementById('shareWhatsapp').href = `https://wa.me/?text=${encodeURIComponent(shareText + ' ' + shareUrl)}`;
                    document.getElementById('shareTelegram').href = `https://t.me/share/url?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(shareText)}`;
                    document.getElementById('shareTwitter').href = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(shareUrl)}`;
                    document.getElementById('shareFacebook').href = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`;
                });
            });

            closeModalButton.addEventListener('click', function() {
                shareModal.classList.remove('active');
            });

            copyButton.addEventListener('click', function() {
                shareUrlInput.select();
                document.execCommand('copy');

                this.innerHTML = '<i class="fas fa-check"></i>';
                setTimeout(() => {
                    this.innerHTML = '<i class="fas fa-copy"></i>';
                }, 2000);
            });


            window.addEventListener('click', function(event) {
                if (event.target === shareModal) {
                    shareModal.classList.remove('active');
                }
            });
        });
    </script>
{% endblock %}